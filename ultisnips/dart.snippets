snippet consumerWidget "consumer widget"
import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

class $0 extends ConsumerWidget {
  @override
  Widget build(BuildContext context, WidgetRef ref) {
    return Container();
  }
}
endsnippet

snippet setUpTest "adds set up method to test"
setUp(() {

});
endsnippet

snippet appThemeProvided "riverprod style appTheme"
final appTheme = context.read(appThemeProvider);
endsnippet

snippet riverViewModel "riverpod style view model"
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:goodbadday/common/architecture/view/view_model.dart';

final $0ViewModelProvider =
    StateNotifierProvider.autoDispose<$1ViewModel, $2>(
  (ref) => $1ViewModel(),
);

class $1ViewModel extends ViewModel<$2> {
  $1ViewModel() : super(null);

  @override
  void onInit() {
    // TODO: implement onInit
  }
}
endsnippet

snippet constConstructor "constnat constructor"
const $0({Key? key}): super(key:key);
endsnippet

snippet tw "test widget"
testWidgets('$1', (WidgetTester tester) async {
	$0
});
endsnippet

snippet grp "unit test group"
group('$1', () {
	$0
});
endsnippet

snippet tst "unit test"
test('$1', () {
	$0
});
endsnippet

snippet tsta "async unit test"
test('$1', () async {
	$0
});
endsnippet

snippet mock "create mockito class"
class Mock$1 extends Mock implements $1 {}
endsnippet

snippet localizations "adds localizations line"
final localizations = RemoteLocalizations.of(context);
endsnippet

snippet jsbuilt "create JsonSerializable class" b
import 'package:json_annotation/json_annotation.dart';

part '${1:`!v expand('%:t:r')`.g.dart}';

@JsonSerializable()
class ${1:CLASS_NAME} {

factory $1.fromJson(Map<String, dynamic> json) =>
	_$$1FromJson(json);

Map<String, dynamic> toJson() => _$$1ToJson(this);
}
endsnippet

snippet testFile "unit test file" b
import 'package:flutter_test/flutter_test.dart';

void main() {
	group('$1', (){
	  test('$2', () {
	  	$0
	  });
	});
}
endsnippet

snippet wtestFile "widget test file" b
import 'package:flutter_test/flutter_test.dart';

void main() {
	testWidgets('$1', (WidgetTester tester) async {
		$0
	});
}
endsnippet
